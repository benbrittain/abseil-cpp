#load(
#    "//absl:copts/configure_copts.bzl",
#    "ABSL_DEFAULT_COPTS",
#    "ABSL_DEFAULT_LINKOPTS",
#    "ABSL_TEST_COPTS",
#)
#
cxx_library(
    name = "absl_check",
    exported_headers = ["absl_check.h"],
    visibility = ["PUBLIC"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        "//absl/log/internal:check_impl",
    ],
)

cxx_library(
    name = "absl_log",
    exported_headers = ["absl_log.h"],
    visibility = ["PUBLIC"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        "//absl/log/internal:log_impl",
    ],
)

cxx_library(
    name = "check",
    exported_headers = ["check.h"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        "//absl/log/internal:check_impl",
        "//absl/log/internal:check_op",
        "//absl/log/internal:conditions",
        "//absl/log/internal:log_message",
        "//absl/log/internal:strip",
    ],
)

cxx_library(
    name = "die_if_null",
    srcs = ["die_if_null.cc"],
    exported_headers = ["die_if_null.h"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        ":log",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/strings:strings",
    ],
)

cxx_library(
    name = "flags",
    srcs = ["flags.cc"],
    exported_headers = ["flags.h"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    visibility = ["PUBLIC"],
    exported_deps =  [
        ":globals",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:log_severity",
        "//absl/flags:flag",
        "//absl/flags:marshalling",
        "//absl/log/internal:config",
        "//absl/log/internal:flags",
        "//absl/strings:strings",
    ],
    # TODO
#    # Binaries which do not access these flags from C++ still want this library linked in.
#    alwayslink = True,
)

cxx_library(
    name = "globals",
    srcs = ["globals.cc"],
    exported_headers = ["globals.h"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    visibility = ["PUBLIC"],
    exported_deps =  [
        "//absl/base:atomic_hook",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:log_severity",
        "//absl/base:raw_logging_internal",
        "//absl/hash:hash",
        "//absl/strings:strings",
    ],
)

cxx_library(
    name = "initialize",
    srcs = ["initialize.cc"],
    exported_headers = ["initialize.h"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    visibility = ["PUBLIC"],
    exported_deps =  [
        ":globals",
        "//absl/base:config",
        "//absl/log/internal:globals",
        "//absl/time:time",
    ],
)

cxx_library(
    name = "log",
    exported_headers = ["log.h"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        "//absl/log/internal:log_impl",
    ],
)

cxx_library(
    name = "log_entry",
    srcs = ["log_entry.cc"],
    exported_headers = ["log_entry.h"],
    visibility = ["PUBLIC"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:log_severity",
        "//absl/log/internal:config",
        "//absl/strings:strings",
        "//absl/time:time",
        "//absl/types:span",
    ],
)

cxx_library(
    name = "log_sink",
    srcs = ["log_sink.cc"],
    exported_headers = ["log_sink.h"],
    visibility = ["PUBLIC"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        ":log_entry",
        "//absl/base:config",
    ],
)

cxx_library(
    name = "log_sink_registry",
    exported_headers = ["log_sink_registry.h"],
    visibility = ["PUBLIC"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        ":log_sink",
        "//absl/base:config",
        "//absl/log/internal:log_sink_set",
    ],
)

cxx_library(
    name = "log_streamer",
    exported_headers = ["log_streamer.h"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        ":absl_log",
        "//absl/base:config",
        "//absl/base:log_severity",
        "//absl/strings:strings",
        "//absl/strings:internal",
        "//absl/types:optional",
        "//absl/utility:utility",
    ],
)

cxx_library(
    name = "structured",
    exported_headers = ["structured.h"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        "//absl/base:config",
        "//absl/log/internal:structured",
        "//absl/strings:strings",
    ],
)
