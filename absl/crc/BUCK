#load(
#    "//absl:copts/configure_copts.bzl",
#    "ABSL_DEFAULT_COPTS",
#    "ABSL_DEFAULT_LINKOPTS",
#    "ABSL_TEST_COPTS",
#)
#
#package(default_visibility = ["//visibility:private"])
#
#licenses(["notice"])

cxx_library(
    name = "cpu_detect",
    srcs = [
        "internal/cpu_detect.cc",
    ],
    exported_headers = ["internal/cpu_detect.h"],
    #    copts = ABSL_DEFAULT_COPTS,
    #    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps = [
        "//absl/base:base",
        "//absl/base:config",
    ],
)

cxx_library(
    name = "crc_internal",
    srcs = [
        "internal/crc.cc",
        "internal/crc_x86_arm_combined.cc",
    ],
    headers = [
    ],
    exported_headers = [
        "internal/crc_internal.h",
        "internal/crc.h",
        "internal/crc32_x86_arm_combined_simd.h",
    ],
    #    copts = ABSL_DEFAULT_COPTS,
    #    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps = [
        ":cpu_detect",
        "//absl/base:base",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:dynamic_annotations",
        "//absl/base:endian",
        "//absl/base:prefetch",
        "//absl/base:raw_logging_internal",
        "//absl/memory:memory",
        "//absl/numeric:bits",
    ],
)

cxx_library(
    name = "crc32c",
    srcs = [
        "crc32c.cc",
        "internal/crc_memcpy_fallback.cc",
        "internal/crc_memcpy_x86_64.cc",
        "internal/crc_non_temporal_memcpy.cc",
    ],
    headers = [
    ],
    exported_headers = [
        "internal/crc32c_inline.h",
        "crc32c.h",
        "internal/crc32c.h",
        "internal/crc_memcpy.h",
    ],
    #   copts = ABSL_DEFAULT_COPTS,
    #   linkopts = ABSL_DEFAULT_LINKOPTS,
    visibility = ["PUBLIC"],
    exported_deps = [
        ":cpu_detect",
        ":crc_internal",
        ":non_temporal_memcpy",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:dynamic_annotations",
        "//absl/base:endian",
        "//absl/base:prefetch",
        "//absl/strings:strings",
    ],
)

cxx_library(
    name = "non_temporal_arm_intrinsics",
    exported_headers = ["internal/non_temporal_arm_intrinsics.h"],
    #    copts = ABSL_DEFAULT_COPTS,
    #    linkopts = ABSL_DEFAULT_LINKOPTS,
    #    visibility = ["//visibility:private"],
    exported_deps = [
        "//absl/base:config",
    ],
)

cxx_library(
    name = "non_temporal_memcpy",
    exported_headers = ["internal/non_temporal_memcpy.h"],
    #    copts = ABSL_DEFAULT_COPTS,
    #    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps = [
        ":non_temporal_arm_intrinsics",
        "//absl/base:config",
        "//absl/base:core_headers",
    ],
)

cxx_library(
    name = "crc_cord_state",
    srcs = ["internal/crc_cord_state.cc"],
    exported_headers = ["internal/crc_cord_state.h"],
    #    copts = ABSL_DEFAULT_COPTS,
    #    linkopts = ABSL_DEFAULT_LINKOPTS,
    visibility = ["//absl/strings/..."],
    exported_deps = [
        ":crc32c",
        "//absl/base:config",
        "//absl/numeric:bits",
        "//absl/strings:strings",
    ],
)
