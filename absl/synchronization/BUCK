
# Internal data structure for efficiently detecting mutex dependency cycles
cxx_library(
    name = "graphcycles_internal",
    srcs = [
        "internal/graphcycles.cc",
    ],
    exported_headers = [
        "internal/graphcycles.h",
    ],
#    copts = ABSL_DEFAULT_COPTS + select({
#        "//conditions:default": [],
#    }),
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        "//absl/base:base",
        "//absl/base:base_internal",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:malloc_internal",
        "//absl/base:raw_logging_internal",
    ],
)

cxx_library(
    name = "kernel_timeout_internal",
    srcs = ["internal/kernel_timeout.cc"],
    exported_headers = ["internal/kernel_timeout.h"],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        "//absl/base:base",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:raw_logging_internal",
        "//absl/time:time",
    ],
)

cxx_library(
    name = "synchronization",
    srcs = [
        "barrier.cc",
        "blocking_counter.cc",
        "internal/create_thread_identity.cc",
        "internal/futex_waiter.cc",
        "internal/per_thread_sem.cc",
        "internal/pthread_waiter.cc",
        "internal/sem_waiter.cc",
        "internal/stdcpp_waiter.cc",
        "internal/waiter_base.cc",
        "internal/win32_waiter.cc",
        "mutex.cc",
        "notification.cc",
    ],
    visibility = ["PUBLIC"],
    exported_headers = [
        "barrier.h",
        "blocking_counter.h",
        "internal/create_thread_identity.h",
        "internal/futex.h",
        "internal/futex_waiter.h",
        "internal/per_thread_sem.h",
        "internal/pthread_waiter.h",
        "internal/sem_waiter.h",
        "internal/stdcpp_waiter.h",
        "internal/waiter.h",
        "internal/waiter_base.h",
        "internal/win32_waiter.h",
        "mutex.h",
        "notification.h",
    ],
#    copts = ABSL_DEFAULT_COPTS,
#    linkopts = select({
#        "//absl:msvc_compiler": [],
#        "//absl:clang-cl_compiler": [],
#        "//absl:wasm": [],
#        "//conditions:default": ["-pthread"],
#    }) + ABSL_DEFAULT_LINKOPTS,
    exported_deps =  [
        ":graphcycles_internal",
        ":kernel_timeout_internal",
        "//absl/base:base",
        "//absl/base:atomic_hook",
        "//absl/base:base_internal",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:dynamic_annotations",
        "//absl/base:malloc_internal",
        "//absl/base:raw_logging_internal",
        "//absl/debugging:stacktrace",
        "//absl/debugging:symbolize",
        "//absl/time:time",
    ]
   # + select({
   #     "//conditions:default": [],
   # }),
)
